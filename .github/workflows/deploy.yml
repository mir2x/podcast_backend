name: CI/CD Deployment

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e 

            PROJECT_DIR=~/projects/podcast_backend
            REPO_URL=https://https://github.com/mir2x/podcast_backend.git
            BRANCH=master

            echo "Starting deployment..."

            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Directory $PROJECT_DIR does not exist. Creating..."
              mkdir -p "$PROJECT_DIR"
            else
              echo "Directory $PROJECT_DIR exists."
            fi

            cd "$PROJECT_DIR"

            if [ ! -d ".git" ]; then
              echo "Directory is not a Git repository. Cloning repository..."
              git clone --branch $BRANCH $REPO_URL .
            else
              echo "Directory is a Git repository. Fetching latest changes..."
              git fetch origin $BRANCH
              git reset --hard origin/$BRANCH
            fi

            echo "Ensuring the working directory is up-to-date..."
            git pull origin $BRANCH

            if [ "$(docker ps -q -f name=podcast-backend)" ]; then
              echo "Container 'podcast-backend' is running. Stopping and removing..."
              docker stop podcast-backend
              docker rm podcast-backend
            elif [ "$(docker ps -aq -f status=exited -f name=podcast-backend)" ]; then
              echo "Container 'podcast-backend' exists but is not running. Removing..."
              docker rm podcast-backend
            else
              echo "No existing container 'podcast-backend' found."
            fi

            echo "Building Docker image..."
            docker buildx build --platform linux/amd64 -t podcast-backend:latest --load .

            echo "Running Docker container..."
            docker run -d \
              -p 9000:9000 \
              --env-file .env \
              --restart on-failure \
              --name podcast-backend \
              podcast-backend:latest

            echo "Deployment completed successfully."
